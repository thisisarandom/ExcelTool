/*
 * auto generated by tools(注意:千万不要手动修改本文件)
 * F
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Text;
using System.Linq;
using UnityEngine;

[Serializable]
public partial class F : IBinarySerializable
{
	/// <summary>
	/// ID
	/// </summary>
	public int ID;
	/// <summary>
	/// Key
	/// </summary>
	public string Key;
	/// <summary>
	/// Part
	/// </summary>
	public string Part;
	/// <summary>
	/// Msg
	/// </summary>
	public string Msg;

	public void DeSerialize(BinaryReader reader)
	{
		ID = reader.ReadInt32();
		Key = reader.ReadString();
		Part = reader.ReadString();
		Msg = reader.ReadString();
	}

	public void Serialize(BinaryWriter writer)
	{
		writer.Write(ID);
		writer.Write(Key);
		writer.Write(Part);
		writer.Write(Msg);
	}
}

[Serializable]
public partial class FConfig : ScriptableObject,IBinarySerializable
{
	public F[] FInfos;
	public void DeSerialize(BinaryReader reader)
	{
		int count = reader.ReadInt32();
		FInfos = new F[count];
		for (int i = 0;i < count; i++)
		{
			F tempData = new F();
			tempData.DeSerialize(reader);
			FInfos[i] = tempData;
		}
	}

	public void Serialize(BinaryWriter writer)
	{
		writer.Write(FInfos.Length);
		for (int i = 0; i < FInfos.Length; i++)
		{
			FInfos[i].Serialize(writer);
		}
	}

	public F QueryById(int id)
	{
		var datas = FInfos.FirstOrDefault(x => x.Id == id);
		return datas;
	}
}
